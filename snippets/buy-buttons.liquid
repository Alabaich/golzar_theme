{% comment %}
  Renders product buy-buttons.
  Accepts:
  - product: {Object} product object.
  - block: {Object} passing the block information.
  - product_form_id: {String} product form id.
  - section_id: {String} id of section to which this snippet belongs.
  - show_pickup_availability: {Boolean} for the pickup availability. If true the pickup availability is rendered, false - not rendered (optional).

    Usage:
  {% render 'buy-buttons', block: block, product: product, product_form_id: product_form_id, section_id: section.id, show_pickup_availability: true %}
{% endcomment %}

<style>
.quantity-wrapper {
  display: inline-flex;
  align-items: center;
  border: 1px solid #d1d1d1;
  border-radius: 30px;
  background-color: white;
  padding: 0px 15px;
}

.quantity-button {
  width: 25px;
  height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  border: none;
  cursor: pointer;
  transition: background-color 0.3s ease, color 0.3s ease;
  color: #333;
  border-radius: 50%;
  padding: 0;
  stroke-width: 1;
}

.quantity-button:hover {
  opacity: 0.7;
}

.quantity-input {
  width: 50px;
  text-align: center;
  border: none;
  font-size: 16px;
  font-weight: 500;
  background-color: transparent;
  appearance: none;
  -moz-appearance: textfield;
}

.quantity-input::-webkit-outer-spin-button,
.quantity-input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.product-form__buttons {
  flex: 1;
}
.product-form__submit {
  width: 100%;
}

.product-form-container {
  display: flex;
  align-items: stretch;
  gap: 15px;
}
</style>


<div {{ block.shopify_attributes }}>
  {%- if product != blank -%}
    {%- liquid
      assign gift_card_recipient_feature_active = false
      if block.settings.show_gift_card_recipient and product.gift_card?
        assign gift_card_recipient_feature_active = true
      endif

      assign show_dynamic_checkout = false
      if block.settings.show_dynamic_checkout and gift_card_recipient_feature_active == false
        assign show_dynamic_checkout = true
      endif
    -%}

    <product-form
      class="product-form"
      data-hide-errors="{{ gift_card_recipient_feature_active }}"
      data-section-id="{{ section.id }}"
    >
      <div class="product-form__error-message-wrapper" role="alert" hidden>
        <span class="svg-wrapper">
          {{- 'icon-error.svg' | inline_asset_content -}}
        </span>
        <span class="product-form__error-message"></span>
      </div>

      {%- form 'product',
        product,
        id: product_form_id,
        class: 'form',
        novalidate: 'novalidate',
        data-type: 'add-to-cart-form'
      -%}
        <div class="product-form-container">
          <input
            type="hidden"
            name="id"
            value="{{ product.selected_or_first_available_variant.id }}"
            {% if product.selected_or_first_available_variant.available == false
              or quantity_rule_soldout
              or product.selected_or_first_available_variant == null
            %}
              disabled
            {% endif %}
            class="product-variant-id"
          >

          {%- if gift_card_recipient_feature_active -%}
            {%- render 'gift-card-recipient-form', product: product, form: form, section: section -%}
          {%- endif -%}

<div class="quantity-wrapper">
  <button type="button" class="quantity-button" name="minus" aria-label="Decrease quantity">
    <svg viewBox="0 0 24 24" aria-hidden="true" focusable="false">
      <rect x="5" y="11" width="14" height="2"></rect>
    </svg>
  </button>
  <input
    type="number"
    class="quantity-input"
    name="quantity"
    id="Quantity-{{ section.id }}"
    value="{{ product.selected_or_first_available_variant.quantity_rule.min }}"
    min="{{ product.selected_or_first_available_variant.quantity_rule.min }}"
    {% if product.selected_or_first_available_variant.quantity_rule.max != null %}
      max="{{ product.selected_or_first_available_variant.quantity_rule.max }}"
    {% endif %}
    step="{{ product.selected_or_first_available_variant.quantity_rule.increment }}"
  >
  <button type="button" class="quantity-button" name="plus" aria-label="Increase quantity">
    <svg viewBox="0 0 24 24" aria-hidden="true" focusable="false">
      <path d="M19 11H13V5h-2v6H5v2h6v6h2v-6h6z"></path>
    </svg>
  </button>
</div>

          <div class="product-form__buttons">
            {%- liquid
              assign check_against_inventory = true
              if product.selected_or_first_available_variant.inventory_management != 'shopify' or product.selected_or_first_available_variant.inventory_policy == 'continue'
                assign check_against_inventory = false
              endif
              if product.selected_or_first_available_variant.quantity_rule.min > product.selected_or_first_available_variant.inventory_quantity and check_against_inventory
                assign quantity_rule_soldout = true
              endif
            -%}
            <button
              id="ProductSubmitButton-{{ section_id }}"
              type="submit"
              name="add"
              class="customButton blueButton product-form__submit button button--full-width {% if show_dynamic_checkout %}button--secondary{% else %}button--primary{% endif %}"
              {% if product.selected_or_first_available_variant.available == false
                or quantity_rule_soldout
                or product.selected_or_first_available_variant == null
              %}
                disabled
              {% endif %}
            >
              <span>
                {%- if product.selected_or_first_available_variant == null -%}
                  {{ 'products.product.unavailable' | t }}
                {%- elsif product.selected_or_first_available_variant.available == false or quantity_rule_soldout -%}
                  {{ 'products.product.sold_out' | t }}
                {%- else -%}
                  {{ 'products.product.add_to_cart' | t }}
                {%- endif -%}
              </span>
              {%- render 'loading-spinner' -%}
            </button>
            {%- if show_dynamic_checkout -%}
              {{ form | payment_button }}
            {%- endif -%}
          </div>
        </div>
      {%- endform -%}
    </product-form>
  {%- else -%}
    <div class="product-form">
      <div class="product-form__buttons form">
        <button
          type="submit"
          name="add"
          class="product-form__submit button button--full-width button--primary"
          disabled
        >
          {{ 'products.product.sold_out' | t }}
        </button>
      </div>
    </div>
  {%- endif -%}

  {%- if show_pickup_availability -%}
    {{ 'component-pickup-availability.css' | asset_url | stylesheet_tag }}

    {%- assign pick_up_availabilities = product.selected_or_first_available_variant.store_availabilities
      | where: 'pick_up_enabled', true
    -%}
    <script src="{{ 'pickup-availability.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const minusButton = document.querySelector('.quantity-button[name="minus"]');
    const plusButton = document.querySelector('.quantity-button[name="plus"]');
    const input = document.querySelector('.quantity-input');

    if (!minusButton || !plusButton || !input) return;

    const min = parseInt(input.getAttribute('min')) || 1;
    const max = parseInt(input.getAttribute('max')) || Infinity;
    const step = parseInt(input.getAttribute('step')) || 1;

    minusButton.addEventListener("click", function () {
      let current = parseInt(input.value) || min;
      if (current > min) {
        input.value = current - step;
        input.dispatchEvent(new Event('change'));
      }
    });

    plusButton.addEventListener("click", function () {
      let current = parseInt(input.value) || min;
      if (current < max) {
        input.value = current + step;
        input.dispatchEvent(new Event('change'));
      }
    });
  });
</script>
